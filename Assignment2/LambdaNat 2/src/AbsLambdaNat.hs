-- File generated by the BNF Converter (bnfc 2.9.5).

{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language LambdaNat5.

module AbsLambdaNat where

import Prelude (Integer, String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

data Program = Prog [Exp]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Exp
    = Abs Id Exp
    | If Exp Exp Exp Exp
    | Let Id Exp Exp
    | Rec Id Exp Exp
    | Fix Exp
    | Hd Exp
    | Tl Exp
    | LE Exp Exp
    | Plus Exp Exp
    | Minus Exp Exp
    | Times Exp Exp
    | Power Exp Exp
    | App Exp Exp
    | Nil
    | Cons Exp Exp
    | Int Integer
    | Var Id
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype Id = Id String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)
